# Create a jonchki compatible platform triple.

# All 3 platform attributes must be defined to skip auto detection of the current host.
IF((NOT DEFINED JONCHKI_PLATFORM_DIST_ID) OR (NOT DEFINED JONCHKI_PLATFORM_DIST_VERSION) OR (NOT DEFINED JONCHKI_PLATFORM_CPU_ARCH))
	# Auto detect the current platform.

	# Is this a windows platform?
	IF(CMAKE_SYSTEM_NAME STREQUAL "Windows")
		SET(JONCHKI_PLATFORM_DIST_ID       "windows")

		# Get the CPU architecture.
		IF(DEFINED ENV{PROCESSOR_ARCHITECTURE})
			SET(__JONCHKI_PLATFORM_PROCESSOR_ARCHITECTURE "$ENV{PROCESSOR_ARCHITECTURE}")
		ELSE(DEFINED ENV{PROCESSOR_ARCHITECTURE})
			SET(__JONCHKI_PLATFORM_PROCESSOR_ARCHITECTURE "")
		ENDIF(DEFINED ENV{PROCESSOR_ARCHITECTURE})
		IF(DEFINED ENV{PROCESSOR_ARCHITEW6432})
			SET(__JONCHKI_PLATFORM_PROCESSOR_ARCHITEW6432 "$ENV{PROCESSOR_ARCHITEW6432}")
		ELSE(DEFINED ENV{PROCESSOR_ARCHITEW6432})
			SET(__JONCHKI_PLATFORM_PROCESSOR_ARCHITEW6432 "")
		ENDIF(DEFINED ENV{PROCESSOR_ARCHITEW6432})

		# See here for details: https://blogs.msdn.microsoft.com/david.wang/2006/03/27/howto-detect-process-bitness/
		IF((__JONCHKI_PLATFORM_PROCESSOR_ARCHITECTURE STREQUAL "amd64") OR (__JONCHKI_PLATFORM_PROCESSOR_ARCHITEW6432 STREQUAL "amd64"))
			SET(JONCHKI_PLATFORM_CPU_ARCH "x86_64")
		ELSEIF((__JONCHKI_PLATFORM_PROCESSOR_ARCHITECTURE STREQUAL "x86") AND (__JONCHKI_PLATFORM_PROCESSOR_ARCHITEW6432 STREQUAL ""))
			SET(JONCHKI_PLATFORM_CPU_ARCH "x86")
		ELSE((__JONCHKI_PLATFORM_PROCESSOR_ARCHITECTURE STREQUAL "amd64") OR (__JONCHKI_PLATFORM_PROCESSOR_ARCHITEW6432 STREQUAL "amd64"))
			MESSAGE(FATAL_ERROR "Failed to detect the CPU architecture on Windows with the ENV variables.")
		ENDIF((__JONCHKI_PLATFORM_PROCESSOR_ARCHITECTURE STREQUAL "amd64") OR (__JONCHKI_PLATFORM_PROCESSOR_ARCHITEW6432 STREQUAL "amd64"))

	ELSEIF(CMAKE_SYSTEM_NAME STREQUAL "Linux")
		# Try to get the OS register size.
		EXECUTE_PROCESS(COMMAND getconf LONG_BIT
		                RESULT_VARIABLE GETCONF_RESULT
		                OUTPUT_VARIABLE GETCONF_OUTPUT)
		IF(GETCONF_RESULT EQUAL 0)
			# Trim the command output.
			STRING(STRIP "${GETCONF_OUTPUT}" GETCONF_OUTPUT_TRIM)

			IF(GETCONF_OUTPUT_TRIM STREQUAL "32")
				SET(JONCHKI_PLATFORM_CPU_ARCH "x86")
			ELSEIF(GETCONF_OUTPUT_TRIM STREQUAL "64")
				SET(JONCHKI_PLATFORM_CPU_ARCH "x86_64")
			ELSE(GETCONF_OUTPUT_TRIM STREQUAL "32")
				MESSAGE(FATAL_ERROR "The getconf tool returned a strange number of bits: '${GETCONF_OUTPUT_TRIM}'")
			ENDIF(GETCONF_OUTPUT_TRIM STREQUAL "32")
		ELSE(GETCONF_RESULT EQUAL 0)
			IF(CMAKE_SYSTEM_PROCESSOR STREQUAL "i386")
				SET(JONCHKI_PLATFORM_CPU_ARCH "x86")
			ELSEIF(CMAKE_SYSTEM_PROCESSOR STREQUAL "i486")
				SET(JONCHKI_PLATFORM_CPU_ARCH "x86")
			ELSEIF(CMAKE_SYSTEM_PROCESSOR STREQUAL "i586")
				SET(JONCHKI_PLATFORM_CPU_ARCH "x86")
			ELSEIF(CMAKE_SYSTEM_PROCESSOR STREQUAL "i686")
				SET(JONCHKI_PLATFORM_CPU_ARCH "x86")
			ELSE((CMAKE_SYSTEM_PROCESSOR STREQUAL "i386"))
				SET(JONCHKI_PLATFORM_CPU_ARCH "${CMAKE_SYSTEM_PROCESSOR}")
			ENDIF(CMAKE_SYSTEM_PROCESSOR STREQUAL "i386")
		ENDIF(GETCONF_RESULT EQUAL 0)

		FILE(READ "/etc/lsb-release" __JONCHKI_PLATFORM_DISTRIBUTION)
		IF(__JONCHKI_PLATFORM_DISTRIBUTION MATCHES "DISTRIB_ID=([^ \t\r\n]+)")
			STRING(TOLOWER "${CMAKE_MATCH_1}" JONCHKI_PLATFORM_DIST_ID)
		ELSE(__JONCHKI_PLATFORM_DISTRIBUTION MATCHES "DISTRIB_ID=([^ \t\r\n]+)")
			MESSAGE(FATAL_ERROR "Failed to detect the Linux distribution with /etc/lsb-release.")
		ENDIF(__JONCHKI_PLATFORM_DISTRIBUTION MATCHES "DISTRIB_ID=([^ \t\r\n]+)")
		IF(__JONCHKI_PLATFORM_DISTRIBUTION MATCHES "DISTRIB_RELEASE=([^ \t\r\n]+)")
			SET(JONCHKI_PLATFORM_DIST_VERSION "${CMAKE_MATCH_1}")
		ELSE(__JONCHKI_PLATFORM_DISTRIBUTION MATCHES "DISTRIB_RELEASE=([^ \t\r\n]+)")
			MESSAGE(FATAL_ERROR "Failed to detect the Linux distribution with /etc/lsb-release.")
		ENDIF(__JONCHKI_PLATFORM_DISTRIBUTION MATCHES "DISTRIB_RELEASE=([^ \t\r\n]+)")

	ELSE(CMAKE_SYSTEM_NAME STREQUAL "Windows")
		MESSAGE(FATAL_ERROR "Unknown system name: ${CMAKE_SYSTEM_NAME}")
	ENDIF(CMAKE_SYSTEM_NAME STREQUAL "Windows")

ENDIF((NOT DEFINED JONCHKI_PLATFORM_DIST_ID) OR (NOT DEFINED JONCHKI_PLATFORM_DIST_VERSION) OR (NOT DEFINED JONCHKI_PLATFORM_CPU_ARCH))


IF((NOT DEFINED JONCHKI_PLATFORM_DIST_ID) OR (NOT DEFINED JONCHKI_PLATFORM_DIST_VERSION) OR (NOT DEFINED JONCHKI_PLATFORM_CPU_ARCH))
	MESSAGE(FATAL_ERROR "Failed to detect the platform.")
ENDIF((NOT DEFINED JONCHKI_PLATFORM_DIST_ID) OR (NOT DEFINED JONCHKI_PLATFORM_DIST_VERSION) OR (NOT DEFINED JONCHKI_PLATFORM_CPU_ARCH))


# Build the complete platform identification.
# Do not include the version of the distribution on windows hosts.
IF(JONCHKI_PLATFORM_DIST_ID STREQUAL "windows")
	SET(JONCHKI_PLATFORM "${JONCHKI_PLATFORM_DIST_ID}_${JONCHKI_PLATFORM_CPU_ARCH}")
ELSE(JONCHKI_PLATFORM_DIST_ID STREQUAL "windows")
	SET(JONCHKI_PLATFORM "${JONCHKI_PLATFORM_DIST_ID}${JONCHKI_PLATFORM_DIST_VERSION}_${JONCHKI_PLATFORM_CPU_ARCH}")
ENDIF(JONCHKI_PLATFORM_DIST_ID STREQUAL "windows")
